---
title: "Database Overview"
---

```{r setup}
#| echo: false
#| message: false

library(tidyverse)
library(readxl)
library(ggbeeswarm)
library(brms)
library(knitr)
library(kableExtra)
library(varde)
```

```{r}
#| echo: false
source("./R/functions.R")
info_df <- get_info_df()
valence_df <- get_valence_df()
holistic_df <- get_holistic_df()
```

## Clip Information

The database currently includes `r nrow(info_df)` video clips, each drawn from a different English-language film and ranging from `r min(info_df$Duration)` to `r max(info_df$Duration)` seconds in duration (Mdn=`r median(info_df$Duration)`, MAD=`r round(mad(info_df$Duration), digits = 1)`). The figure below shows the distribution of the clips' durations. The table below presents each clip's abbreviation, source film title (and release year), as well as starting and stopping timestamp in HH:MM:SS format, and duration in seconds.

```{r}
#| echo: false
#| fig.width: 5
#| fig.height: 2

info_df |> 
  ggplot(aes(x = Duration, y = "")) + 
  geom_boxplot() +
  geom_quasirandom(color = "firebrick") +
  scale_y_discrete() +
  scale_x_continuous(
    limits = c(90, 450), 
    breaks = seq(0, 480, 60),
    expand = c(0, 0)
  ) +
  labs(title = "Distribution of Clip Durations (in seconds)", y = NULL, x = NULL) +
  theme(panel.grid.major.y = element_blank(), axis.ticks.y = element_blank())
```

```{r}
#| echo: false

info_df |> 
  arrange(Abbrev) |> 
  select(Abbrev:Duration) |> 
  mutate(across(
    Clip_Start:Clip_Stop,
    ~s_to_ts(ts_to_s(.), force_hours = TRUE, round_seconds = TRUE)
  )) |>
  rename_all(str_replace, pattern = "_", replacement = " ") |> 
  kable(digits = 2) |> 
  kable_styling()
```

## Holistic Ratings

After watching each clip, participants provided holistic ratings on how the entire clip made them feel. These holistic ratings were completed using five Positive Affect items (i.e., *alert*, *determined*, *enthusiastic*, *excited*, *inspired*) and five Negative Affect items (i.e., *afraid*, *distressed*, *nervous*, *scared*, *upset*), each rated on an ordinal scale from 0 to 4. The plot below shows the distributions of the mean scale scores (across all clips and raters).

```{r}
#| echo: false

holistic_dfw <-  
  holistic_df |> 
  dplyr::select(-Scale) |> 
  tidyr::pivot_wider(
    names_from = Item,
    values_from = Rating
  ) |> 
  dplyr::mutate(
    "Positive Affect" = rowMeans(dplyr::pick(c(Alert, Determined, Enthusiastic, Excited, Inspired)), na.rm = TRUE),
    "Negative Affect" = rowMeans(dplyr::pick(c(Afraid, Distressed, Nervous, Scared, Upset)), na.rm = TRUE)
  )
```

```{r}
#| echo: false

holistic_summary <- 
  holistic_dfw |>
  dplyr::group_by(Abbrev) |> 
  dplyr::summarize(
    Raters    = dplyr::n_distinct(Rater),
    "PA Mean" = mean(`Positive Affect`),
    "PA SD"   = sd(`Positive Affect`),
    "NA Mean" = mean(`Negative Affect`),
    "NA SD"   = sd(`Negative Affect`)
  ) 

holistic_summary |> 
  dplyr::mutate(dplyr::across(-c(Abbrev, Raters), ~sprintf("%.02f", .))) |> 
  knitr::kable(digits = 2, align = c("l", rep("r", 5))) |> 
  kableExtra::kable_styling()
```


```{r}
#| echo: false
#| fig.height: 6
#| fig.width: 7
#| out-width: "100%"

holistic_dfw |> 
  ggplot2::ggplot(ggplot2::aes(x = `Positive Affect`, y = forcats::fct_reorder(Abbrev, .x = `Positive Affect`))) +
  ggplot2::geom_boxplot() +
  ggplot2::labs(y = NULL)
```

```{r}
#| echo: false
#| fig.height: 6
#| fig.width: 7
#| out-width: "100%"

holistic_dfw |> 
  ggplot2::ggplot(ggplot2::aes(x = `Negative Affect`, y = forcats::fct_reorder(Abbrev, .x = `Negative Affect`))) +
  ggplot2::geom_boxplot() +
  ggplot2::labs(y = NULL)
```

The table below shows the estimated inter-rater reliability (i.e., unbalanced average-measures consistency intraclass correlation) for the holistic ratings of each clip (first item-level and then scale-level). These were derived from Bayesian generalizability studies using the [varde](https://github.com/jmgirard/varde) package. The lower and upper columns represent the boundaries of the 95% equal-tail credible interval.

```{r}
#| echo: false

hitem_iccs <- 
  varde::calc_icc(
    .data = holistic_dfw,
    subject = "Abbrev", 
    rater = "Rater", 
    scores = c(
      "Afraid", "Alert", "Determined", "Distressed", "Enthusiastic",
      "Excited", "Inspired", "Nervous", "Scared", "Upset"
    ),
    iter = 10000,
    file = "data/icc/icc_holistic_item",
    silent = 2
  )

hitem_df <- 
  hitem_iccs |> 
  summary() |> 
  filter(term == "ICC(Q,khat)") |> 
  rename_all(str_to_title)

hitem_df |> 
  kable(digits = 3) |> 
  kable_styling()
```

```{r}
#| echo: false

holistic_dfw2 <- 
  holistic_dfw |> 
  dplyr::rename_all(.funs = str_replace, pattern = " ", replacement = "")

hscale_iccs <- 
  varde::calc_icc(
    .data = holistic_dfw2,
    subject = "Abbrev", 
    rater = "Rater", 
    scores = c("NegativeAffect", "PositiveAffect"),
    iter = 10000,
    file = "data/icc/icc_holistic_scale",
    silent = 2
  )

hscale_df <- 
  hscale_iccs |> 
  summary() |> 
  dplyr::filter(term == "ICC(Q,khat)") |> 
  dplyr::rename_all(str_to_title)

hscale_df |> 
  knitr::kable(digits = 3) |> 
  kableExtra::kable_styling()
```


## Dynamic Ratings

```{r}
#| echo: false

clip_summary <- 
  valence_df |>
  dplyr::summarize(
    Raters = dplyr::n_distinct(Rater),
    Mean = mean(Rating),
    SD   = sd(Rating),
    p0   = min(Rating),
    p25  = quantile(Rating, probs = 0.25),
    p50  = median(Rating),
    p75  = quantile(Rating, probs = 0.75),
    p100 = max(Rating),
    .by = Abbrev
  ) 
```

A total of `r length(unique(valence_df$Rater))` participants watched this film clip and used the [CARMA software](https://carma.jmgirard.com) to provide continuous (i.e., second-by-second) ratings of how it made them feel. These continuous ratings were made on a single emotional *valence* scale ranging from -4 (very negative) to 4 (very positive).

Each clip was watched by participants who used the [CARMA software](https://carma.jmgirard.com) to provide continuous (i.e., second-by-second) ratings of how it made them feel. These continuous ratings were made on a single emotional *valence* scale ranging from -4 (very negative) to 4 (very positive). The number of participants rating each clip ranged from `r min(clip_summary$Raters)` to `r max(clip_summary$Raters)` (Mdn=`r median(clip_summary$Raters)`, MAD=`r round(mad(clip_summary$Raters), digits = 1)`). The table below provides the number of raters and duration per clip as well as a summary of the valence ratings distribution across raters (i.e., mean, standard deviation, and quartiles).

```{r}
#| echo: false
#| fig.width: 5
#| fig.height: 2

clip_summary |> 
  ggplot(aes(x = Raters, y = "")) + 
  geom_boxplot() +
  geom_quasirandom(color = "firebrick") +
  scale_y_discrete() +
  scale_x_continuous(
    limits = c(71, 85),
    breaks = seq(0, 100, 2),
    expand = c(0, 0)
  ) +
  labs(
    title = "Distribution of the Number of Raters per Clip", 
    y = NULL, 
    x = NULL
  ) +
  theme(panel.grid.major.y = element_blank(), axis.ticks.y = element_blank())
```

```{r}
#| echo: false
#| fig.width: 5
#| fig.height: 4

ggplot(valence_df, aes(x = Rating)) + 
  geom_histogram(breaks = seq(-4, 4, 1/3), color = "white") +
  labs(title = "Distribution of Valence Ratings")
```

```{r}
#| echo: false

clip_summary |> 
  mutate(across(Mean:p100, ~sprintf("%.02f", .))) |> 
  kable(digits = 2, align = c("l", rep("r", 9))) |> 
  kable_styling()
```

```{r}
#| echo: false
#| fig.height: 6
#| fig.width: 7
#| out-width: "100%"

valence_df |> 
  mutate(Abbrev = fct_reorder(.f = factor(Abbrev), .x = Rating, .fun = median, na.rm = TRUE)) |> 
  ggplot(aes(x = Rating, y = Abbrev)) + 
  geom_boxplot(outlier.alpha = 1/4) +
  labs(y = NULL, x = NULL, title = "Boxplots of Continuous Valence Ratings per Clip")
```

The table below shows the estimated inter-rater reliability (i.e., balanced average-measures consistency intraclass correlation) for the continuous valence ratings of each clip. These were derived from a Bayesian generalizability study using the [varde](https://github.com/jmgirard/varde) package. The lower and upper columns in the table below represent the boundaries of the 95% equal-tail credible interval.

```{r}
#| echo: false
#| message: false

icc_files <- dir(path = "data/icc", pattern = "^icc_.*.csv$", full.names = TRUE)
icc_df <- 
  lapply(X = icc_files, FUN = readr::read_csv, show_col_types = FALSE) |> 
  bind_rows()
icc_df |> 
  select(-Score) |> 
  kable(digits = 3) |> 
  kable_styling()
```
